# Sem.py
# alukard6942
# 2/7/20

# _/\\\________/\\\__/\\\\\\\\\\\\\____/\\\________/\\\_______/\\\\\_______/\\\\\\\\\\\\\\\__/\\\\\\\\\\\\\\\_        
#  _\/\\\_______\/\\\_\/\\\/////////\\\_\/\\\_______\/\\\_____/\\\///\\\____\///////\\\/////__\/\\\///////////__       
#   _\/\\\_______\/\\\_\/\\\_______\/\\\_\//\\\______/\\\____/\\\/__\///\\\________\/\\\_______\/\\\_____________      
#    _\/\\\_______\/\\\_\/\\\\\\\\\\\\\/___\//\\\____/\\\____/\\\______\//\\\_______\/\\\_______\/\\\\\\\\\\\_____     
#     _\/\\\_______\/\\\_\/\\\/////////______\//\\\__/\\\____\/\\\_______\/\\\_______\/\\\_______\/\\\///////______    
#      _\/\\\_______\/\\\_\/\\\________________\//\\\/\\\_____\//\\\______/\\\________\/\\\_______\/\\\_____________   
#       _\//\\\______/\\\__\/\\\_________________\//\\\\\_______\///\\\__/\\\__________\/\\\_______\/\\\_____________  
#        __\///\\\\\\\\\/___\/\\\__________________\//\\\__________\///\\\\\/___________\/\\\_______\/\\\\\\\\\\\\\\\_ 
#         ____\/////////_____\///____________________\///_____________\/////_____________\///________\///////////////__

import threading

class Sem:
	sem = threading.Semaphore()
	value = -1 
	
	def __init__(self,):
		pass

	def wait(self,):
		self.value -= 1
		self.sem.acquire()

	def unlock(self,):
		if(self.value < 1):
			self.sem.release()
			self.value += 1
			
			
			
